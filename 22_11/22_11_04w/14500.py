# 테트로미노
# 알고리즘 : 완전탐색, 구현
# 테트로미노의 모든 경우의수 탐색

n, m = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(n)]
t1 = [
    [(0, 0), (0, 1), (0, 2), (0, 3)],
    [(0, 0), (1, 0), (2, 0), (3, 0)]
]
t2 = [
    [(0, 0), (0, 1), (1, 0), (1, 1)]
]
t3 = [
    [(0, 0), (1, 0), (2, 0), (2, 1)],
    [(0, 0), (1, 0), (2, 0), (2, -1)],
    [(0, 0), (0, -1), (0, -2), (1, -2)],
    [(0, 0), (0, -1), (0, -2), (-1, -2)],
    [(0, 0), (-1, 0), (-2, 0), (-2, -1)],
    [(0, 0), (-1, 0), (-2, 0), (-2, 1)],
    [(0, 0), (0, 1), (0, 2), (-1, 2)],
    [(0, 0), (0, 1), (0, 2), (1, 2)]
]
t4 = [
    [(0, 0), (1, 0), (1, 1), (2, 1)],
    [(0, 0), (1, 0), (1, -1), (2, -1)],
    [(0, 0), (0, -1), (1, -1), (1, -2)],
    [(0, 0), (0, -1), (-1, -1), (-1, -2)],
    [(0, 0), (-1, 0), (-1, -1), (-2, -1)],
    [(0, 0), (-1, 0), (-1, 1), (-2, 1)],
    [(0, 0), (0, 1), (-1, 1), (-1, 2)],
    [(0, 0), (0, 1), (1, 1), (1, 2)]
]
t5 = [
    [(0, 0), (0, 1), (0, 2), (1, 1)],
    [(0, 0), (0, 1), (0, 2), (-1, 1)],
    [(0, 0), (1, 0), (2, 0), (1, -1)],
    [(0, 0), (1, 0), (2, 0), (1, 1)],
    [(0, 0), (0, -1), (0, -2), (-1, -1)],
    [(0, 0), (0, -1), (0, -2), (1, -1)],
    [(0, 0), (-1, 0), (-2, 0), (-1, 1)],
    [(0, 0), (-1, 0), (-2, 0), (-1, -1)]
]
tArr = [t1, t2, t3, t4, t5]

answer = 0

for i in range(n):
    for j in range(m):
        for k in tArr:
            for l in k:
                temp = 0
                for x, y in l:
                    nx, ny = x+i, y+j
                    if 0 <= nx < n and 0 <= ny < m:
                        temp += arr[nx][ny]
                    else:
                        break
                if temp > answer:
                    answer = temp

print(answer)
